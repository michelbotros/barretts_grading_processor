FROM --platform=linux/amd64 pytorch/pytorch AS example-algorithm-amd64
# Use a 'large' base container to show-case how to load pytorch and use the GPU (when enabled)

# Ensures that Python output to stdout/stderr is not buffered: prevents missing information when terminating
ENV PYTHONUNBUFFERED=1

RUN apt-get update \
 && apt-get -y install libvips42 \
 && apt-get -y install libgeos-dev \
 && apt-get -y install curl \
 && curl --remote-name --location "https://github.com/computationalpathologygroup/ASAP/releases/download/ASAP-2.1-(Nightly)/ASAP-2.1-Ubuntu2004.deb" \
 && dpkg --install ASAP-2.1-Ubuntu2004.deb || true \
 && apt-get -f install --fix-missing --fix-broken --assume-yes \
 && ldconfig -v \
 && apt-get clean \
 && PYTHONPATH="/opt/ASAP/bin":"${PYTHONPATH}" \
 && export PYTHONPATH \
 && : \

RUN dpkg -L ASAP
RUN groupadd -r user && useradd -m --no-log-init -r -g user user
USER user

WORKDIR /opt/app

COPY --chown=user:user requirements.txt /opt/app/
COPY --chown=user:user resources /opt/app/resources

# You can add any Python dependencies to requirements.txt
RUN python -m pip install \
    --user \
    --no-cache-dir \
    --no-color \
    --requirement /opt/app/requirements.txt

COPY --chown=user:user inference.py /opt/app/
COPY --chown=user:user load_models.py /opt/app/
COPY --chown=user:user inference.py /opt/app/
COPY --chown=user:user preprocessing.py /opt/app/
COPY --chown=user:user rw.py /opt/app/

#ENTRYPOINT ["python", "inference.py"]
